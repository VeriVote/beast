{"name":"Borda","code":"unsigned int[C] voting(unsigned int amountVotes, unsigned int votes[amountVotes][C]) {\n    int r[C];\n    unsigned int res[C];\n    unsigned int i \u003d 0;\n    unsigned int j \u003d 0;\n\n    for (i \u003d 0; i \u003c C; i++) {\n        r[i] \u003d 1;\n    }\n    for (i \u003d 0; i \u003c C; i++) {\n        res[i] \u003d 0;\n    }\n    for (i \u003d 0; i \u003c V; i++) {\n        for (j \u003d 0; j \u003c C; j++) {\n            if (votes[i][j] \u003c C) {\n                res[votes[i][j]] +\u003d (C - j) - 1;\n            }\n        }\n    }\n    unsigned int max \u003d 0;\n    for (i \u003d 0; i \u003c C; i++) {\n        if (max \u003c res[i]) {\n            max \u003d res[i];\n            for (j \u003d 0; j \u003c C; j++) {\n                r[j] \u003d 0;\n            }\n            r[i] \u003d 1;\n        } else if (max \u003d\u003d res[i]) {\n            r[i] \u003d 1;\n        }\n    }\n    return r;\n}","container":{"inType":{"type":"Approval","properties":{"unsigned":true,"dataType":"INT","dimensions":2,"sizeOfDimensions":["V","C"]}},"outType":{"type":"CandidateList","properties":{"unsigned":true,"dataType":"INT","dimensions":1,"sizeOfDimensions":["C"]}},"inputStruct":{"inOutType":{"type":"Approval","properties":{"unsigned":true,"dataType":"INT","dimensions":2,"sizeOfDimensions":["V","C"]}},"dataType":"INT","dimensions":2,"sizeOfDimensions":["V","C"],"unsigned":true,"structName":"auto_intVC"},"outputStruct":{"inOutType":{"type":"CandidateList","properties":{"unsigned":true,"dataType":"INT","dimensions":1,"sizeOfDimensions":["C"]}},"dataType":"INT","dimensions":1,"sizeOfDimensions":["C"],"unsigned":true,"structName":"auto_intC"},"nameContainer":{}},"lockedLineStart":0,"lockedLineEnd":86,"lockedBracePos":761,"isNew":false}