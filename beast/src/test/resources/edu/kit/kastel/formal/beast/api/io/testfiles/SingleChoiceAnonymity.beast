4 name21 SingleChoiceAnonymity8 elecDesc831 4 name12 ApprovalTest14 votingDeclLine1 24 code727 //Pr채ferenzwahl: W채hler legt Ranking f체r alle Kandidaten fest
//Kandidat oder unentschieden: Ein gew채hlter Kandidat oder unentschieden
unsigned int voting(unsigned int votes[V][C]) { 
    unsigned int res[C];
    unsigned int i = 0;
    unsigned int j = 0;
 
    for (i = 0; i < C; i++) {
        res[i] = 0;
    }
    for (i = 0; i < V; i++) {
        for (j = 0; j < C; j++) {
            res[j] = res[j] + votes[i][j];
        }
    }
    unsigned int max = 0;
    unsigned int elect = 0;
    for (i = 0; i < C; i++) {
        if (max < res[i]) {
            max = res[i];
            elect = i;
        } else {
            if (max == res[i]) {
                elect = C;
            }
        }
    }
    return elect;
} 
9 inputType10 PREFERENCE10 outputType13 CAND_OR_UNDEF8 propList481 <propertyListName>
New PropertyList
</propertyListName>
<propertyItem>
<preAndPostConditions>
4 name14 FalseProperty23 pre43 FOR_ALL_VOTERS(v) : VOTES1(v) == VOTES2(v);4 post17 ELECT1 != ELECT2;7 varlist0 
</preAndPostConditions>
<testStatus>
true
</testStatus>

</propertyItem>
<propertyItem>
<preAndPostConditions>
4 name13 Eigenschaft 03 pre43 FOR_ALL_VOTERS(v) : VOTES1(v) == VOTES2(v);4 post17 ELECT1 == ELECT2;7 varlist0 
</preAndPostConditions>
<testStatus>
true
</testStatus>

</propertyItem>
19 electionCheckParams375 <amountVotersMin>
5
</amountVotersMin>
<amountVotersMax>
5
</amountVotersMax>
<amountCandidatesMin>
3
</amountCandidatesMin>
<amountCandidatesMax>
7
</amountCandidatesMax>
<amountSeatsMin>
1
</amountSeatsMin>
<amountSeatsMax>
1
</amountSeatsMax>
<timeout>
<duration>
0
</duration>
<timeunit>
SECONDS
</timeunit>

</timeout>
<processes>
0
</processes>
<argument>

</argument>
