// Initializing Election VOTE_NUMBER
unsigned int CURRENT_AMT_VOTER = NONDET_UINT();
ASSUME (CURRENT_AMT_VOTER LESS_OR_EQ MAX_AMT_VOTER);
unsigned int CURRENT_AMT_SEAT = NONDET_UINT();
ASSUME (CURRENT_AMT_SEAT LESS_OR_EQ MAX_AMT_SEAT);
unsigned int CURRENT_AMT_CAND = NONDET_UINT();
ASSUME (CURRENT_AMT_CAND LESS_OR_EQ MAX_AMT_CAND);
VOTE_TYPE VAR_NAME;
VAR_NAME.AMT_MEMBER = NONDET_UINT();
ASSUME (VAR_NAME.AMT_MEMBER == CURRENT_AMT_VOTER);
for (unsigned int i = 0; i < CURRENT_AMT_VOTER; ++i) {
    for (unsigned int j = 0; j < CURRENT_AMT_CAND; ++j) {
        VAR_NAME.LIST_MEMBER[i][j] = NONDET_UINT();
        ASSUME (VAR_NAME.LIST_MEMBER[i][j] >= 0);
        ASSUME (VAR_NAME.LIST_MEMBER[i][j] <= 1);
    }
}
for (unsigned int i = CURRENT_AMT_VOTER; i < MAX_AMT_VOTER; ++i) {
    for (unsigned int j = 0; j < MAX_AMT_CAND; ++j) {
        VAR_NAME.LIST_MEMBER[i][j] = NONDET_UINT();
        ASSUME (VAR_NAME.LIST_MEMBER[i][j] == INVALID_VOTE);
    }
}
